import streamlit as st
import os
from openai import OpenAI

# client = OpenAI(api_key=os.getenv("OPENAI_API_KEY")) b·ªè d√≤ng n√†y ƒëi thay b·∫±ng d√≤ng d∆∞·ªõi

client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])



# 2. H√†m l·∫•y c√¢u tr·∫£ l·ªùi t·ª´ GPT
def get_answer(prompt):
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",  # ho·∫∑c "gpt-3.5-turbo" n·∫øu b·∫°n ch∆∞a c√≥ quy·ªÅn gpt-4
        messages=[
            {"role": "system", "content": "B·∫°n l√† m·ªôt tr·ª£ l√Ω AI."},
            {"role": "user", "content": prompt}
        ]
    )
    return response.choices[0].message.content


# 3. Giao di·ªán ch√≠nh v·ªõi Streamlit
st.set_page_config(page_title="Huynkawa Chatbot", page_icon="ü§ñ")
st.title("ü§ñ Huynkawa AI Chatbot")

# 4. Kh·ªüi t·∫°o session_state ƒë·ªÉ l∆∞u l·ªãch s·ª≠ chat
if "messages" not in st.session_state:
    st.session_state.messages = []

# 5. Hi·ªÉn th·ªã l·ªãch s·ª≠ chat
for msg in st.session_state.messages:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# 6. Nh·∫≠p c√¢u h·ªèi v√† nh·∫≠n c√¢u tr·∫£ l·ªùi t·ª´ GPT
if prompt := st.chat_input("B·∫°n mu·ªën h·ªèi g√¨?"):
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    with st.chat_message("assistant"):
        answer = get_answer(prompt)
        st.markdown(answer)

    st.session_state.messages.append({"role": "assistant", "content": answer})
